---
- name: Fix file permissions for settings.php.
  ansible.builtin.file:
    state: file
    path: "{{ deploy_path }}/{{ webroot }}/sites/{{ site.folder }}/settings.php"
    owner: "{{ www_user }}"
    group: "{{ www_user }}"
  become: true
  with_items: "{{ drupal.sites }}"
  loop_control:
    loop_var: site
  when:
    - www_user != deploy_user
    - previous_build_number == 0

- name: Install Drupal.
  ansible.builtin.command:
    cmd: "{{ drush_bin }} -l {{ site.folder }} {{ site.install_command }}"
    chdir: "{{ deploy_path }}/{{ webroot }}/sites/{{ site.folder }}"
  become: "{{ 'no' if www_user == deploy_user else 'yes' }}"
  become_user: "{{ www_user }}"
  with_items: "{{ drupal.sites }}"
  loop_control:
    loop_var: site
  when: (previous_build_number == 0) or (site.force_install is defined and site.force_install)
  register: _drush_output

- name: Show drush output.
  ansible.builtin.debug:
    msg: "{{ _drush_output }}"
  when: drupal.drush_verbose_output

- name: Fix permissions on Drupal directory.
  ansible.builtin.file:
    path: "{{ deploy_path }}/{{ webroot }}/sites/{{ site.folder }}"
    state: directory
    mode: '0755'
  with_items: "{{ drupal.sites }}"
  loop_control:
    loop_var: site
  when: (previous_build_number == 0) or (site.force_install is defined and site.force_install)

- name: Clear the cache.
  ansible.builtin.include_role:
    name: "cache_clear/cache_clear-{{ project_type }}"
  with_items: "{{ drupal.sites }}"
  loop_control:
    loop_var: site
  when:
    - previous_build_number > 0
    - site.config_import_command != 'deploy'

- name: Apply Drupal database updates.
  ansible.builtin.command:
    cmd: "{{ drush_bin }} -l {{ site.folder }} -y updb"
    chdir: "{{ deploy_path }}/{{ webroot }}/sites/{{ site.folder }}"
  become: "{{ 'no' if www_user == deploy_user else 'yes' }}"
  become_user: "{{ www_user }}"
  with_items: "{{ drupal.sites }}"
  loop_control:
    loop_var: site
  when: site.config_import_command != 'deploy'
  register: _drush_output

- name: Show drush output.
  ansible.builtin.debug:
    msg: "{{ _drush_output }}"
  when: drupal.drush_verbose_output

- name: Import configuration.
  ansible.builtin.command:
    cmd: "{{ drush_bin }} -l {{ site.folder }} -y {{ site.config_import_command }}"
    chdir: "{{ deploy_path }}/{{ webroot }}/sites/{{ site.folder }}"
  become: "{{ 'no' if www_user == deploy_user else 'yes' }}"
  become_user: "{{ www_user }}"
  with_items: "{{ drupal.sites }}"
  loop_control:
    loop_var: site
  when:
    - previous_build_number > 0
    - site.config_import_command
  register: _drush_output

- name: Show drush output.
  ansible.builtin.debug:
    msg: "{{ _drush_output }}"
  when: drupal.drush_verbose_output

