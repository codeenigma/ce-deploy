---
# Ensure default values for common variables.
- name: Define deploy user.
  set_fact:
    deploy_user: "{{ deploy_user | default('deploy') }}"
- name: Define deploy base path.
  set_fact:
    deploy_base_path: "{{ deploy_base_path | default('/home/{{ deploy_user }}/deploy/{{ project_name }}_{{ build_type }}') }}"
- name: Define mounted directory for assets.
  set_fact:
    deploy_assets_base_path: "{{ deploy_assets_base_path | default('/home/{{ deploy_user }}/shared/{{ project_name }}_{{ build_type }}/assets') }}"
- name: Define webroot.
  set_fact:
    webroot: "{{ webroot | default('web') }}"
- name: Define build deploy path prefix.
  set_fact:
    deploy_path_prefix: "{{ deploy_base_path }}/{{ project_name }}_{{ build_type }}_build_"
- name: Define build deploy path.
  set_fact:
    deploy_path: "{{ deploy_path | default('{{ deploy_path_prefix }}{{ build_number }}') }}"
- name: Define live_symlink dest.
  set_fact:
    live_symlink_dest: "{{ live_symlink_dest | default('{{ deploy_base_path }}/live.{{ project_name }}_{{ build_type }}') }}"

# Gather last known good build directly from symlink.
# This can happen:
# - when the first builds failed,
# and we don't have yet a succesful one
# - when the repository source changed and we lost track of
# the project
# - when the symlink has been manually messed up.
# @todo commented out, not sure we want that.
# - name: Check if we have a live symlink.
#   stat:
#     path: "{{ live_symlink_dest }}"
#   register: last_build_symlink

# - name: Register current build.
#   shell: "readlink {{ live_symlink_dest }} | grep -Po '{{ deploy_base_path }}/{{ project_name }}_{{ build_type }}_build_\\K([0-9]*)'"
#   register: last_build
#   when: last_build_symlink.stat.exists

# This is passed from caller.
- name: Gather last known good build number.
  set_fact:
    previous_build_number: "{{ previous_known_build_number }}"

# - set_fact:
#     previous_build_number: "{{ last_build.stdout }}"
#   when:
#     - last_build_symlink.stat.exists
#     - previous_build_number == 0

# Make sure the deploy target exists.
- name: Ensure deploy target directory exists.
  file:
    path: "{{ deploy_base_path }}"
    state: directory

# Project specific init tasks.
- name: Include project init tasks.
  include_tasks: "{{ project_type }}.yml"

- name: Define opcache cachetool path.
  set_fact:
    cachetool_bin: "{{ cachetool_bin | default('/home/{{ deploy_user }}/.bin/cachetool.phar') }}"

- name: Ensure we have a cachetool binary.
  import_role:
    name: cli/cachetool
