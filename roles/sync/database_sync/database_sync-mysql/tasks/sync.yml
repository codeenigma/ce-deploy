---
- name: Register remote dump name (from database).
  set_fact:
    mysql_sync_source_dump_path: "/tmp/{{ database.source.database }}.sql.bz2"
  when: not database.source.type == 'dump'

- name: Register existing remote dump name.
  set_fact:
    mysql_sync_source_dump_path: "{{ database.source.database }}"
  when: database.source.type == 'dump'

- name: Get source last known good build number.
  command:
    argv:
      - "/bin/sh"
      - "{{ _ce_deploy_base_dir }}/scripts/track-get.sh"
      - "--build-id"
      - "{{ database.source.build_id }}"
  register: mysql_sync_source_build_number
  delegate_to: localhost
  when: database.source.type == 'rolling'

- name: Register source database name.
  set_fact:
    mysql_sync_source_database: "{{ database.source.database }}_{{ mysql_sync_source_build_number.stdout }}"
  when: database.source.type == 'rolling'

- name: Register source database name.
  set_fact:
    mysql_sync_source_database: "{{ database.source.database }}"
  when: not database.source.type == 'rolling'

- name: Take a dump from source database.
  shell: "mysqldump --defaults-extra-file={{ database.source.credentials_file }} {{ mysql_sync_source_database }} | bzip2 > {{ mysql_sync_source_dump_path }}"
  delegate_to: "{{ database.source.host }}"
  when:
    - not database.source.type == 'dump'
    - database.source.fresh_db

- name: Find source database host.
  ansible.builtin.command:
    cmd: "grep 'host' {{ database.source.credentials_file }}"
  register: mysql_host_info_grep
  delegate_to: "{{ database.source.host }}"
  when: not database.source.fresh_db

- name: Register source database host.
  set_fact:
    mysql_sync_source_database_host: "{{ mysql_host_info_grep.stdout.split('=')[1] }}"
  delegate_to: "{{ database.source.host }}"
  when: not database.source.fresh_db

- name: Copy a nightly backup for the source database.
  ansible.builtin.copy:
    src: "{{ database.source.dumps_directory }}/{{ mysql_sync_source_database_host }}/{{ project_name }}_{{ build_type }}"
    dest: "{{ mysql_sync_source_dump_path }}"
    remote_src: true
  delegate_to: "{{ database.source.host }}"
  when: not database.source.fresh_db

- name: Register tmp target dump name.
  set_fact:
    mysql_sync_target_dump_path: "/tmp/{{ database.target.database }}.sql.bz2"
  when: not database.target.type == 'dump'

- name: Register final target dump name.
  set_fact:
    mysql_sync_target_dump_path: "{{ database.target.database }}"
  when: database.target.type == 'dump'

- name: Get target last known good build number.
  command:
    argv:
      - "/bin/sh"
      - "{{ _ce_deploy_base_dir }}/scripts/track-get.sh"
      - "--build-id"
      - "{{ database.target.build_id }}"
  register: mysql_sync_target_build_number
  delegate_to: localhost
  when: database.target.type == 'rolling'

- name: Register target database name.
  set_fact:
    mysql_sync_target_database: "{{ database.target.database }}_{{ mysql_sync_target_build_number.stdout }}"
  when: database.target.type == 'rolling'

- name: Register target database name.
  set_fact:
    mysql_sync_target_database: "{{ database.target.database }}"
  when: not database.target.type == 'rolling'

- name: Fetch dump file.
  fetch:
    src: "{{ mysql_sync_source_dump_path }}"
    dest: "{{ _ce_deploy_build_tmp_dir }}/{{ database.target.database }}.sql.bz2"
    flat: true
  delegate_to: "{{ database.source.host }}"

- name: Copy dump file to destination.
  copy:
    src: "{{ _ce_deploy_build_tmp_dir }}/{{ database.target.database }}.sql.bz2"
    dest: "{{ mysql_sync_target_dump_path }}"

- name: Drop target database.
  shell: "mysql --defaults-extra-file={{ database.target.credentials_file }} -e 'drop database if exists {{ mysql_sync_target_database }};'"
  when: not database.target.type == 'dump'

- name: Recreate target database.
  shell: "mysql --defaults-extra-file={{ database.target.credentials_file }} -e 'create database {{ mysql_sync_target_database }};'"
  when: not database.target.type == 'dump'

- name: Repopulate database from dump.
  shell: "bzcat {{ mysql_sync_target_dump_path }} | mysql --defaults-extra-file={{ database.target.credentials_file }} {{ mysql_sync_target_database }}"
  when: not database.target.type == 'dump'

- name: Remove tmp dump file.
  file:
    path: "{{ mysql_sync_target_dump_path }}"
    state: absent
  when: not database.target.type == 'dump'
